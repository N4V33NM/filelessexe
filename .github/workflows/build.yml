name: Build PowerShell EXE using .NET

on:
  workflow_dispatch:
    inputs:
      payload_url:
        description: 'URL to fetch payload'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install .NET SDK
      run: |
        dotnet --version

    - name: Fetch Payload from URL
      run: |
        $url = '${{ github.event.inputs.payload_url }}'
        Invoke-WebRequest -Uri $url -OutFile 'payload.ps1'

    - name: Convert PowerShell script to Base64
      run: |
        $script = Get-Content -Path 'payload.ps1' -Raw
        $b64 = [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($script)) -replace "`r?`n", ""
        Set-Content -Path 'base64_payload.txt' -Value $b64

    - name: Create .NET console project
      run: |
        dotnet new console -o PowerShellRunner
        cd PowerShellRunner
        dotnet add package Microsoft.PowerShell.SDK

    - name: Generate C# code
      shell: powershell
      run: |
        $b64 = Get-Content -Path 'base64_payload.txt' -Raw
        $b64_cleaned = $b64 -replace "`r?`n", ""  # Remove newlines

        $csharp_code = @"
        using System;
        using System.Management.Automation;
        using System.Text;

        class Program {
            static void Main() {
                string b64 = `"$b64_cleaned`"; // Base64-encoded PowerShell script
                string script = Encoding.UTF8.GetString(Convert.FromBase64String(b64));

                using (PowerShell ps = PowerShell.Create()) {
                    ps.AddScript(script);
                    ps.Invoke();
                }
            }
        }
        "@

        Set-Content -Path 'PowerShellRunner/Program.cs' -Value $csharp_code

    - name: Build EXE
      run: |
        cd PowerShellRunner
        dotnet build -c Release

    - name: Upload executable
      uses: actions/upload-artifact@v4
      with:
        name: payload_exe
        path: PowerShellRunner/bin/Release/net8.0/PowerShellRunner.exe
