name: Build PowerShell EXE (IExpress & WinRAR Fallback)

on:
  workflow_dispatch:
    inputs:
      payload_url:
        description: 'URL to fetch PowerShell script'
        required: true
        type: string

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Check if IExpress is available
    - name: Check IExpress Availability
      shell: cmd
      run: |
        where iexpress || echo "IExpress is missing!" > iexpress_missing.txt

    # Step 3: Fetch the payload script
    - name: Fetch Payload Script
      shell: powershell
      run: |
        Invoke-WebRequest -Uri '${{ github.event.inputs.payload_url }}' -OutFile 'payload.ps1'

    # Step 4: Create IExpress SED configuration
    - name: Create IExpress SED File
      shell: cmd
      run: |
        echo [Version] > package.sed
        echo Class=IEXPRESS >> package.sed
        echo [Options] >> package.sed
        echo ExtractOnly=0 >> package.sed
        echo HideExtractAnimation=1 >> package.sed
        echo TargetName=C:\Users\runneradmin\Desktop\payload.exe >> package.sed
        echo [Strings] >> package.sed
        echo InstallProgram=powershell.exe -ExecutionPolicy Bypass -File payload.ps1 >> package.sed

    # Step 5: Run IExpress (Try to create an EXE)
    - name: Run IExpress
      shell: cmd
      run: |
        iexpress /N /Q package.sed || echo "IExpress failed!" > iexpress_failed.txt

    # Step 6: Debug IExpress Failure (If it fails)
    - name: Debug IExpress Failure
      if: ${{ hashFiles('iexpress_failed.txt') != '' }}
      shell: cmd
      run: |
        echo "IExpress failed! Checking logs..."
        type iexpress_log.txt || echo "No log file found."

    # Step 7: Install WinRAR (If IExpress fails)
    - name: Download & Install WinRAR
      if: ${{ hashFiles('iexpress_failed.txt') != '' }}
      shell: powershell
      run: |
        Invoke-WebRequest -Uri "https://www.rarlab.com/rar/wrar600.exe" -OutFile "winrar.exe"
        Start-Process -FilePath .\winrar.exe -ArgumentList "/S" -NoNewWindow -Wait

    # Step 8: Create SFX Archive with WinRAR (Fallback)
    - name: Create SFX Archive (WinRAR)
      if: ${{ hashFiles('iexpress_failed.txt') != '' }}
      shell: cmd
      run: |
        echo Setup=powershell.exe -ExecutionPolicy Bypass -File payload.ps1 > sfx_comment.txt
        "C:\Program Files\WinRAR\winrar.exe" a -r -sfx -z"sfx_comment.txt" payload.exe payload.ps1

    # Step 9: Upload EXE (Either from IExpress or WinRAR)
    - name: Upload Executable
      uses: actions/upload-artifact@v4
      with:
        name: payload_exe
        path: C:\Users\runneradmin\Desktop\payload.exe




